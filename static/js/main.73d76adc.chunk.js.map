{"version":3,"sources":["component/Item.js","component/Basket.js","App.js","index.js"],"names":["items","id","product","price","prices","Item","useState","counters","setCounters","units","total","setTotal","subTotal","setSubTotal","useEffect","reduce","counter","ind","arr","calculateDiscount","console","log","setCount","index","newCounter","newCounters","Object","assign","originalPrice","counterArr","listItem","map","item","className","onClick","decrementPrice","Math","trunc","value","incrementPrice","toFixed","Basket","App","ReactDOM","render","document","getElementById"],"mappings":"2MAGMA,EAAQ,CACZ,CAAEC,GAAI,EAAGC,QAAS,SAAUC,MAAO,GACnC,CAAEF,GAAI,EAAGC,QAAS,QAASC,MAAO,IAClC,CAAEF,GAAI,EAAGC,QAAS,OAAQC,MAAO,KACjC,CAAEF,GAAI,EAAGC,QAAS,OAAQC,MAAO,MAK7BC,EAAS,CAAC,EAAG,EAAG,EAAG,GAmHVC,EAjHF,WACX,IADiB,EAGeC,mBAAS,CAAC,EAAG,EAAG,EAAG,IAHlC,mBAGVC,EAHU,KAGAC,EAHA,OAISF,mBAASF,GAJlB,mBAIVK,EAJU,aAKeH,mBAASG,IALxB,gCAQSH,mBAAS,IARlB,mBAQVI,EARU,KAQHC,EARG,OASeL,mBAAS,GATxB,mBASVM,EATU,KASAC,EATA,KAWjBC,qBAAU,WAAO,IAAD,EACcP,EAASQ,QACnC,WAAsBC,EAASC,EAAKC,GAAS,IAA1CR,EAAyC,EAAzCA,MAAOE,EAAkC,EAAlCA,SACFT,EAAQH,EAAMiB,GAAKd,MAKzB,OAJAS,GAAYT,EAAQa,EAIb,CAAEN,MAFTA,GAASS,EAAkBhB,EAAOc,EAAKC,GAAOF,EAE9BJ,cAElB,CACEF,MAAO,EACPE,SAAU,IAXNF,EADM,EACNA,MAAOE,EADD,EACCA,SAcfD,EAASD,GACTG,EAAYD,GACZQ,QAAQC,IAAIX,EAAOE,KAClB,CAACL,IAEJ,IAAMe,EAAW,SAACC,EAAOC,GACvB,IAAMC,EAAcC,OAAOC,OAAO,GAAIpB,GACtCkB,EAAYF,GAASC,EACrBhB,EAAYiB,IASRN,EAAoB,SAACS,EAAeX,EAAKY,GAM7C,GAAoB,IAARZ,EAEV,OADSW,EAA6B,GAAbA,EAG3B,GAAY,IAARX,GACEY,EAAW,IAAM,EAAG,CAECA,EAAW,GAIlC,OADSD,EAA6B,GAAbA,EAI7B,OAAOA,GAcHE,EAAW9B,EAAM+B,KAAI,SAACC,EAAMT,GAAP,OACzB,sBAAKU,UAAU,aAAf,UACE,uBAAOA,UAAU,eAAjB,SAAiCD,EAAK9B,UACtC,sBAAK+B,UAAU,WAAf,UACE,wBAAQC,QAAS,kBAXA,SAACX,GACtBD,EACEC,EACoB,IAApBhB,EAASgB,GAAehB,EAASgB,GAAShB,EAASgB,GAAS,GAQnCY,CAAeZ,EAAOa,KAAKC,MAAML,EAAK7B,SAA7D,eAGA,uBAAO8B,UAAU,eAAjB,SAAiC1B,EAASgB,KAC1C,wBAAQW,QAAS,kBAnBA,SAACX,EAAOe,EAAON,GACpCV,EAASC,EAAOhB,EAASgB,GAAS,GAkBPgB,CAAehB,EAAOS,EAAK7B,MAAO6B,EAAK9B,UAA9D,eAGA,oBAAI+B,UAAU,aAAd,8BAAuCD,EAAK7B,cAVf6B,EAAK9B,YAexC,OACE,sBAAK+B,UAAU,OAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,+CACCH,KAEH,sBAAKG,UAAU,8BAAf,UACE,+CACA,+CACe,+BAAOrB,EAAS4B,QAAQ,QAGvC,yCACS,+BAAO9B,EAAM8B,QAAQ,eC7GvBC,EARA,WACb,OACE,qBAAKR,UAAU,iBAAf,SACE,cAAC,EAAD,OCKSS,MARf,WACE,OACE,qBAAKT,UAAU,qBAAf,SACE,cAAC,EAAD,OCDNU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.73d76adc.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\n\nconst items = [\n  { id: 0, product: \"Apples\", price: 1.0 },\n  { id: 1, product: \"Bread\", price: 0.8 },\n  { id: 2, product: \"Milk\", price: 1.3 },\n  { id: 3, product: \"Soup\", price: 0.65 },\n];\n\n//count number of items\n//const prices = items.map((item, id) => item.price);\nconst prices = [0, 0, 0, 0];\n\nconst Item = () => {\n  let week = true;\n\n  const [counters, setCounters] = useState([0, 0, 0, 0]);\n  const [units, setUnits] = useState(prices);\n  const [purchase, setPurchase] = useState(units);\n\n  //const getPrices = items.map((item, id) => item.price);\n  const [total, setTotal] = useState(0.0);\n  const [subTotal, setSubTotal] = useState(0.0);\n\n  useEffect(() => {\n    const { total, subTotal } = counters.reduce(\n      ({ total, subTotal }, counter, ind, arr) => {\n        const price = items[ind].price;\n        subTotal += price * counter;\n\n        total += calculateDiscount(price, ind, arr) * counter;\n\n        return { total, subTotal };\n      },\n      {\n        total: 0,\n        subTotal: 0,\n      }\n    );\n    setTotal(total);\n    setSubTotal(subTotal);\n    console.log(total, subTotal);\n  }, [counters]);\n\n  const setCount = (index, newCounter) => {\n    const newCounters = Object.assign([], counters);\n    newCounters[index] = newCounter;\n    setCounters(newCounters);\n  };\n\n  const setUnitPrice = (index, aaddnewUniPrice) => {\n    const addnewUniPrices = Object.assign([], units);\n    addnewUniPrices[index] = aaddnewUniPrice;\n    setUnits(addnewUniPrices);\n  };\n\n  const calculateDiscount = (originalPrice, ind, counterArr) => {\n    const APPLE_PERCENT_0FF = 10;\n    const BREAD_PERCENT_0FF = 50;\n\n    const CENT = 100;\n    let result = 0;\n    if (week && ind === 0) {\n      result = originalPrice - originalPrice * (APPLE_PERCENT_0FF / CENT);\n      return result;\n    }\n    if (ind === 1) {\n      if (counterArr[3] >= 2) {\n        // if two soups are selected\n        const selectedBreads = counterArr[1];\n        // no of soups is X, number of discounted breads = Math.floor(X/2)\n        // selectedBreads-\n        result = originalPrice - originalPrice * (BREAD_PERCENT_0FF / CENT);\n        return result;\n      }\n    }\n    return originalPrice;\n  };\n\n  const incrementPrice = (index, value, item) => {\n    setCount(index, counters[index] + 1);\n  };\n\n  const decrementPrice = (index) => {\n    setCount(\n      index,\n      counters[index] === 0 ? counters[index] : counters[index] - 1\n    );\n  };\n\n  const listItem = items.map((item, index) => (\n    <div className=\"list-items\" key={item.product}>\n      <label className=\"product-name\">{item.product}</label>\n      <div className=\"controls\">\n        <button onClick={() => decrementPrice(index, Math.trunc(item.price))}>\n          -\n        </button>\n        <label className=\"displayValue\">{counters[index]}</label>\n        <button onClick={() => incrementPrice(index, item.price, item.product)}>\n          +\n        </button>\n        <h4 className=\"unit-price\">{`Unit / Â£${item.price}`}</h4>\n      </div>\n    </div>\n  ));\n\n  return (\n    <div className=\"cart\">\n      <div className=\"list-item-container\">\n        <h3>Shopping Cart</h3>\n        {listItem}\n      </div>\n      <div className=\"list-item-details-container\">\n        <h4>Price Details</h4>\n        <h5>\n          Subtotal GBP <span>{subTotal.toFixed(2)}</span>\n        </h5>\n\n        <h5>\n          TOTAL: <span>{total.toFixed(2)}</span>\n        </h5>\n      </div>\n    </div>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./Item\";\n\nconst Basket = () => {\n  return (\n    <div className=\"item-container\">\n      <Item />\n    </div>\n  );\n};\n\nexport default Basket;\n","import \"./App.css\";\nimport Basket from \"./component/Basket\";\n\nfunction App() {\n  return (\n    <div className=\"main-container App\">\n      <Basket />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}